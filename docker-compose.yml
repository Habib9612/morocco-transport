version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: morocco-transport-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-morocco_transport}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-morocco_password}
      POSTGRES_DB: ${DB_NAME:-morocco_transport}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - morocco-transport-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: morocco-transport-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - morocco-transport-network

  # Next.js Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: morocco-transport-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${DB_USER:-morocco_transport}:${DB_PASSWORD:-morocco_password}@postgres:5432/${DB_NAME:-morocco_transport}
      - DIRECT_URL=postgresql://${DB_USER:-morocco_transport}:${DB_PASSWORD:-morocco_password}@postgres:5432/${DB_NAME:-morocco_transport}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - morocco-transport-network
    volumes:
      - ./uploads:/app/uploads

  # Java Backend (Spring Boot)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: morocco-transport-backend
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${DB_NAME:-morocco_transport}
      - SPRING_DATASOURCE_USERNAME=${DB_USER:-morocco_transport}
      - SPRING_DATASOURCE_PASSWORD=${DB_PASSWORD:-morocco_password}
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
    ports:
      - "${BACKEND_PORT:-8080}:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - morocco-transport-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: morocco-transport-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - frontend
      - backend
    networks:
      - morocco-transport-network

  # Adminer for database management
  adminer:
    image: adminer:latest
    container_name: morocco-transport-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    depends_on:
      - postgres
    networks:
      - morocco-transport-network
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  morocco-transport-network:
    driver: bridge
